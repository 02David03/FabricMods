plugins {
    id 'java'
    id 'maven-publish'
    id 'fabric-loom' version '0.2.7-SNAPSHOT' apply false
    //id 'fabric-loom' version '0.4.3'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'fabric-loom'

    group = maven_group
    archivesBaseName = mod_id
    version = "${mod_version}+${minecraft_version}"

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    minecraft {
        refmapName = "${mod_id}-refmap.json"
        runDir = "${project.projectDir.getName()}/run/"
    }

    ext {
        dep_chainmail_version = findProject(":chainmail").mod_version
        dep_container_lib_version = findProject(":ninjaphenix-container-library").mod_version
        withoutUnwanted = {
            exclude(module: "minecraft")
            exclude(module: "fabric-loader")
            exclude(module: "fabric-api")
            exclude(module: "modmenu")
        }
    }

    repositories {
        mavenLocal()
    }

    dependencies {
        minecraft("com.mojang:minecraft:${minecraft_version}")
        mappings("net.fabricmc:yarn:${minecraft_version}+build.${yarn_version}:v2")
        modImplementation("net.fabricmc:fabric-loader:${loader_version}")
        modImplementation("net.fabricmc.fabric-api:fabric-api:${fabric_api_version}")

        modImplementation "me.shedaniel:RoughlyEnoughItems:${rei_version}", withoutUnwanted

        modImplementation "io.github.prospector:modmenu:${modmenu_version}", withoutUnwanted

        compileOnly("org.checkerframework:checker-qual:3.0.1")
    }

    processResources {
        inputs.properties(
                "mod_version": mod_version,
                "minecraft_version": minecraft_version,
                "dep_minecraft_version": dep_minecraft_version,
                "dep_loader_version": dep_loader_version,
                "dep_fabric_version": dep_fabric_version,
                "dep_container_lib_version": dep_container_lib_version,
                "dep_chainmail_version": dep_chainmail_version
        )
        from(sourceSets.main.resources.srcDirs) {
            include("fabric.mod.json")
            expand(
                    "mod_version": mod_version,
                    "minecraft_version": minecraft_version,
                    "dep_minecraft_version": dep_minecraft_version,
                    "dep_loader_version": dep_loader_version,
                    "dep_fabric_version": dep_fabric_version,
                    "dep_container_lib_version": dep_container_lib_version,
                    "dep_chainmail_version": dep_chainmail_version
            )
        }
        from(sourceSets.main.resources.srcDirs) {
            exclude("fabric.mod.json")
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set("sources")
        from sourceSets.main.allSource
    }

    jar { from("LICENSE") }

    runClient {
        args = ["--username", "Dev"]
    }

    tasks.withType(JavaCompile) { options.setEncoding("UTF-8") }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = mod_id
                artifact(remapJar) {
                    builtBy remapJar
                }
                artifact(sourcesJar) {
                    classifier = "sources"
                    builtBy remapSourcesJar
                }
            }
        }

        repositories {
            mavenLocal()
        }
    }
}