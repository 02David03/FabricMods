apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "fabric-loom"

group = maven_group
archivesBaseName = mod_id
version = "${mod_version}+${minecraft_version}"

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

minecraft {
    refmapName = "${mod_id}-refmap.json"
}

repositories {
    mavenLocal()
}

dependencies {
    minecraft("com.mojang:minecraft:${minecraft_version}")
    mappings("net.fabricmc:yarn:${minecraft_version}+build.${yarn_version}:v2")
    modImplementation("net.fabricmc:fabric-loader:${loader_version}")
    modImplementation("net.fabricmc.fabric-api:fabric-api:${fabric_api_version}")

    modImplementation("me.shedaniel:RoughlyEnoughItems:${rei_version}") {
        exclude(group: "net.fabricmc", module: "fabric-loader")
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "io.github.prospector", module: "modmenu")
    }

    modImplementation("io.github.prospector:modmenu:${modmenu_version}") {
        exclude(group: "net.fabricmc", module: "fabric-loader")
        exclude(group: "net.fabricmc.fabric-api")
    }

    compileOnly("org.checkerframework:checker-qual:3.0.1")
}

processResources {
    inputs.property "mod_version", mod_version
    from(sourceSets.main.resources.srcDirs) {
        include("fabric.mod.json")
        expand("version": mod_version)
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude("fabric.mod.json")
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

jar { from("LICENSE") }

runClient {
    args = ["--username", "Dev"]
}

tasks.withType(JavaCompile) { options.setEncoding("UTF-8") }

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = mod_id
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                classifier = "sources"
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        mavenLocal()
    }
}